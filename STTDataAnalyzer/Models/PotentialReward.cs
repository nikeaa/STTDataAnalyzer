namespace STTDataAnalyzer
{

	// <auto-generated />
	//
	// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
	//
	//    using SttUser;
	//
	//    var welcome = Welcome.FromJson(jsonString);

	namespace SttUser
	{
		using Newtonsoft.Json;
		using System.Collections.Generic;

		public partial class PotentialReward
		{
			[JsonProperty("type")]
			public long Type { get; set; }

			[JsonProperty("id")]
			public long Id { get; set; }

			[JsonProperty("symbol")]
			public string Symbol { get; set; }

			[JsonProperty("name")]
			public string Name { get; set; }

			[JsonProperty("full_name")]
			public string FullName { get; set; }

			[JsonProperty("flavor")]
			public string Flavor { get; set; }

			[JsonProperty("icon")]
			public Icon Icon { get; set; }

			[JsonProperty("quantity")]
			public long Quantity { get; set; }

			[JsonProperty("rarity")]
			public long Rarity { get; set; }

			[JsonProperty("portrait", NullValueHandling = NullValueHandling.Ignore)]
			public IconClass Portrait { get; set; }

			[JsonProperty("full_body", NullValueHandling = NullValueHandling.Ignore)]
			public IconClass FullBody { get; set; }

			[JsonProperty("skills", NullValueHandling = NullValueHandling.Ignore)]
			public RewardSkills Skills { get; set; }

			[JsonProperty("traits", NullValueHandling = NullValueHandling.Ignore)]
			public List<string> Traits { get; set; }

			[JsonProperty("action", NullValueHandling = NullValueHandling.Ignore)]
			public ActionElement Action { get; set; }

			[JsonProperty("item_type", NullValueHandling = NullValueHandling.Ignore)]
			public long? ItemType { get; set; }
		}
	}
}
